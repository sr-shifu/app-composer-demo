Transform: AWS::Serverless-2016-10-31
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub:
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /todos:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetToDos.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateOrUpdateToDo.Arn}/invocations
              responses: {}
          /todos/{id}:
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateOrUpdateToDo.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
  GetToDos:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetToDos
      CodeUri: GetToDos
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 3008
      Timeout: 60
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME:
            Ref: ToDosTable
          TABLE_ARN:
            Fn::GetAtt:
            - ToDosTable
            - Arn
          DDB_ENDPOINT_URL: localhost
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: ToDosTable
      Architectures:
      - arm64
      Events:
        ApiGETtodos:
          Type: Api
          Properties:
            Path: /todos
            Method: GET
            RestApiId:
              Ref: Api
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.GetToDos35a38142DepLayer
    Metadata:
      SamResourceId: GetToDos
  GetToDosLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetToDos}
  ToDosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  CreateOrUpdateToDo:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: CreateOrUpdateToDo
      CodeUri: CreateOrUpdateToDo
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME:
            Ref: ToDosTable
          TABLE_ARN:
            Fn::GetAtt:
            - ToDosTable
            - Arn
          DDB_ENDPOINT_URL: localhost
      Events:
        ApiPOSTtodos:
          Type: Api
          Properties:
            Path: /todos
            Method: POST
            RestApiId:
              Ref: Api
        ApiPUTtodosid:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: PUT
            RestApiId:
              Ref: Api
      Architectures:
      - arm64
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.CreateOrUpdateToDob03f17c3DepLayer
    Metadata:
      SamResourceId: CreateOrUpdateToDo
  CreateOrUpdateToDoLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${CreateOrUpdateToDo}
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /Users/ildar/Documents/AppComposer/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
